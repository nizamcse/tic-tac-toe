{"version":3,"sources":["Square.js","GameStatus.js","Board.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","padding","backgroundColor","cyan","width","borderRadius","position","color","icon","top","left","height","Square","value","onClick","classes","IconButton","className","disabled","verticalAlign","GameStatus","status","xIsNext","theme","container","maxWidth","display","alignItems","contentWraper","message","fontSize","lineHeight","flexGrow","justifyContent","alertIcon","marginRight","Board","useState","Array","fill","squares","setSquares","setXIsNext","gameStatus","setGameStatus","handleClick","i","sqr","slice","gStatus","lines","length","a","b","c","calculateWinner","prev","Container","fixed","Box","Alert","severity","Button","size","variant","startIcon","pt","pb","Grid","spacing","item","xs","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba70924f.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport StarBorderPurple500Icon from \"@mui/icons-material/StarBorderPurple500\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { IconButton } from \"@mui/material\";\nimport { cyan } from \"@mui/material/colors\";\nconst useStyles = makeStyles({\n  root: {\n    padding: \"100% 0px 0px 0px !important\",\n    backgroundColor: `${cyan[\"A400\"]} !important`,\n    width: \"100%\",\n    borderRadius: \"0 !important\",\n    position: \"relative\",\n    \"&.MuiIconButton-colorPrimary\": {\n      color: \"#9c27b0 !important\",\n    },\n    \"&.MuiIconButton-colorSecondary\": {\n      color: \"#1976d2 !important\",\n    },\n  },\n  icon: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    width: \"100% !important\",\n    height: \"100% !important\",\n  },\n});\n\nconst Square = ({ value, onClick }) => {\n  const classes = useStyles();\n  if (value)\n    return (\n      <IconButton\n        className={classes.root}\n        aria-label={value === \"X\" ? \"ClearIcon\" : \"StarBorderPurple500Icon\"}\n        color={value === \"X\" ? \"primary\" : \"secondary\"}\n        disabled\n      >\n        {value === \"X\" ? (\n          <ClearIcon className={classes.icon} />\n        ) : (\n          <StarBorderPurple500Icon className={classes.icon} />\n        )}\n      </IconButton>\n    );\n  return (\n    <IconButton\n      className={classes.root}\n      aria-label=\"empty-btn\"\n      color=\"secondary\"\n      onClick={onClick}\n    ></IconButton>\n  );\n};\n\nexport default Square;\n","import React from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport StarBorderPurple500Icon from \"@mui/icons-material/StarBorderPurple500\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\nconst useStyles = makeStyles({\n  icon: {\n    verticalAlign: \"middle\",\n    color: \"red\",\n    width: \"12px !important\",\n  },\n});\nconst GameStatus = ({ status, xIsNext }) => {\n  const classes = useStyles(0);\n  if (status === \"X\")\n    return (\n      <span>\n        PLAYER <ClearIcon className={classes.icon} /> WIN\n      </span>\n    );\n  else if (status === \"O\")\n    return (\n      <span>\n        PLAYER <StarBorderPurple500Icon className={classes.icon} /> WIN\n      </span>\n    );\n  else if (status === \"D\") return <span>GAME DRAWN!</span>;\n  else if (xIsNext)\n    return (\n      <span>\n        PLAYER <ClearIcon className={classes.icon} /> TURN.\n      </span>\n    );\n  else\n    return (\n      <span>\n        PLAYER <StarBorderPurple500Icon className={classes.icon} /> TURN.\n      </span>\n    );\n};\n\nexport default GameStatus;\n","import React, { useState } from \"react\";\nimport { Box, Grid, Alert, Container, Button } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport RestartAltIcon from \"@mui/icons-material/RestartAlt\";\nimport Square from \"./Square\";\nimport GameStatus from \"./GameStatus\";\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    maxWidth: \"320px !important\",\n    display: \"flex !important\",\n    height: \"100vh\",\n    alignItems: \"center\",\n    padding: \"8px !important\",\n  },\n  contentWraper: {\n    width: \"100%\",\n  },\n  message: {\n    fontSize: \"12px !important\",\n    lineHeight: \"1 !important\",\n    display: \"flex !important\",\n    flexGrow: 1,\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  alertIcon: {\n    alignItems: \"center\",\n    fontSize: \"14px !important\",\n    marginRight: \"4px !important\",\n  },\n}));\nfunction Board() {\n  const classes = useStyles();\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  const [xIsNext, setXIsNext] = useState(true);\n  const [gameStatus, setGameStatus] = useState(null);\n  const handleClick = (i) => {\n    const sqr = squares.slice();\n    if (gameStatus || sqr[i]) {\n      return;\n    }\n    sqr[i] = xIsNext ? \"X\" : \"O\";\n    setSquares(sqr);\n    let gStatus = calculateWinner(sqr);\n    setGameStatus(gStatus);\n    setXIsNext((prev) => !prev);\n  };\n  const resetGame = () => {\n    setSquares(Array(9).fill(null));\n    setXIsNext(true);\n    setGameStatus(null);\n  };\n  return (\n    <Container className={classes.container} fixed>\n      <Box className={classes.contentWraper}>\n        <Box>\n          <Alert\n            severity=\"info\"\n            classes={{ icon: classes.alertIcon, message: classes.message }}\n          >\n            <GameStatus status={gameStatus} xIsNext={xIsNext} />\n            <Button\n              size=\"small\"\n              variant=\"outlined\"\n              startIcon={<RestartAltIcon />}\n              onClick={resetGame}\n            >\n              Restart\n            </Button>\n          </Alert>\n        </Box>\n        <Box pt={2} pb={2}>\n          <Grid container spacing={2}>\n            <Grid item xs={4}>\n              <Square onClick={() => handleClick(0)} value={squares[0]} />\n            </Grid>\n            <Grid item xs={4}>\n              <Square onClick={() => handleClick(1)} value={squares[1]} />\n            </Grid>\n            <Grid item xs={4}>\n              <Square onClick={() => handleClick(2)} value={squares[2]} />\n            </Grid>\n            <Grid item xs={4}>\n              <Square onClick={() => handleClick(3)} value={squares[3]} />\n            </Grid>\n            <Grid item xs={4}>\n              <Square onClick={() => handleClick(4)} value={squares[4]} />\n            </Grid>\n            <Grid item xs={4}>\n              <Square onClick={() => handleClick(5)} value={squares[5]} />\n            </Grid>\n            <Grid item xs={4}>\n              <Square onClick={() => handleClick(6)} value={squares[6]} />\n            </Grid>\n            <Grid item xs={4}>\n              <Square onClick={() => handleClick(7)} value={squares[7]} />\n            </Grid>\n            <Grid item xs={4}>\n              <Square onClick={() => handleClick(8)} value={squares[8]} />\n            </Grid>\n          </Grid>\n        </Box>\n      </Box>\n    </Container>\n  );\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  let i = 0;\n  for (i; i <= 8; i++) {\n    if (!squares[i]) break;\n  }\n  if (i > 8) return \"D\";\n  return null;\n}\n\nexport default Board;\n","import Board from \"./Board\";\nconst App = () => {\n  return <Board />;\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}